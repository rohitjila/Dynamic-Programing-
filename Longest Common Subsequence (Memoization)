class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        n=len(text1)
        m=len(text2)
        dp = [[-1 for j in range(n+1)] for i in range(m+1)]
        ans=self.f(text1,text2,n,m,dp)
        return ans
    def f(self,text1,text2,n,m,dp):
        if (n == 0 or m == 0):
            return 0
        if (dp[m][n] != -1):
            return dp[m][n]
        
        if (text1[n-1] == text2[m-1]):
            dp[m][n] = 1 + self.f(text1,text2,n-1,m-1,dp)
            return dp[m][n]
        else:
            dp[m][n] = max(self.f(text1,text2,n-1,m,dp),
                            self.f(text1,text2,n,m-1,dp))
            return dp[m][n]
            
